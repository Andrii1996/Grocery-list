{"version":3,"sources":["components/GroceryList/GroceryList.jsx","components/AddGrocery/Addgrocery.jsx","App.jsx","localStorage/setLocalStorage.js","index.js"],"names":["GroceryList","groceryList","removeProduct","changeStatus","sortedGroceryList","sort","a","b","priority","useState","filteredByStatus","setView","useEffect","className","type","onClick","event","console","log","viewAll","filter","item","status","length","map","id","name","onChange","target","value","AddGrocery","addNewGrocery","setName","setPriority","setStatus","handleNameChange","useCallback","handlePriorityChange","handleStatusChange","onSubmit","preventDefault","placeholder","required","App","key","defaultValue","stored","localStorage","getItem","initial","JSON","parse","setValue","setItem","stringify","SetLocalStorage","setGroceryList","newGrocery","Date","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53e88f75.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './GroceryList.css'\n\nexport const GroceryList = ({ groceryList, removeProduct, changeStatus }) => {\n  const sortedGroceryList = groceryList.sort((a, b) => a.priority - b.priority);\n  const [ filteredByStatus , setView ] = useState(sortedGroceryList);\n\n  const viewAll = (event) => {\n    console.log(event);\n    setView(groceryList);\n  }\n\n  const filtHave = () => {\n    setView([...groceryList].filter((item) => item.status === 'have'));\n  }\n\n  const filtRanOut = () => {\n    setView([...groceryList].filter((item) => item.status === 'ranOut'));\n  }\n\n  useEffect(() => {\n    setView(groceryList)\n  }, [groceryList]);\n\n  return (\n    <div>\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className=\"ui button\"\n          onClick={(event) => viewAll(event)}\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          className=\"ui button\"\n          onClick={() => filtHave()}\n        >\n          Have\n        </button>\n        <button\n          type=\"button\"\n          className=\"ui button\"\n          onClick={() => filtRanOut()}\n        >\n          Ran Out\n        </button>\n      </div>\n      {filteredByStatus.length > 0\n      ? (\n        <ul className=\"groceryList\">\n        {filteredByStatus.map(item => (\n          <li\n            key={item.id}\n            className=\"ui card\"\n            id=\"groceryCard\"\n          >\n            <p>\n              <span className=\"groceryCard__name\">\n                {`Name : `}\n              </span>\n              {item.name}\n            </p>\n            <p>\n              <span className=\"groceryCard__name\">\n              {`Priority : `}\n              </span>\n              {item.priority}\n            </p>\n            <p>\n              <span className=\"groceryCard__name\">\n              {`Status : `}\n              </span>\n              {item.status}\n            </p>\n            <div className=\"groceryCard__button\">\n              <div>\n                <span>{`Status `}</span>\n                <select\n                  className=\"ui basic floating dropdown button\"\n                  onChange={event => changeStatus(event.target.value, item.id)}\n                >\n                  <option value=\"\">Change Status</option>\n                  <option value=\"ranOut\">Ran out</option>\n                  <option value=\"have\">Have</option>\n                </select>\n              </div>\n              <button\n                type=\"button\"\n                className=\"ui primary button\"\n                onClick={() => removeProduct(item.id)}\n              >\n                Remove\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n      )\n      : (\n        <p className=\"groceryCard__text\">Add new product</p>\n      )}\n\n    </div>\n  )\n}\n","import React, { useCallback, useState } from 'react';\nimport './AddGrocery.css';\n\nexport const AddGrocery = ({ addNewGrocery }) => {\n  const [name, setName] = useState('');\n  const [priority, setPriority] = useState('');\n  const [status, setStatus] = useState('');\n\n  const handleNameChange = useCallback((event) => {\n    setName(event.target.value);\n  }, []);\n\n  const handlePriorityChange = useCallback((event) => {\n    setPriority(event.target.value);\n  }, []);\n\n  const handleStatusChange = useCallback((event) => {\n    setStatus(event.target.value);\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!priority || !status) {\n      return;\n    }\n\n    addNewGrocery(name, priority, status);\n    setName('');\n    setPriority('');\n    setStatus('');\n  };\n\n  return (\n    <div className=\"addProduct\">\n      <h3 className=\"addProduct__title\">Add new product</h3>\n      <form onSubmit={handleSubmit} className=\"ui form\">\n        <input\n          type=\"text\"\n          className=\"ui input\"\n          placeholder=\"Enter product name\"\n          required\n          value={name}\n          onChange={handleNameChange}\n        />\n\n        <select\n          className=\"ui basic floating dropdown button\"\n          value={priority}\n          onChange={handlePriorityChange}\n          required\n        >\n          <option value=\"\">Select priority</option>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n        </select>\n\n        <select\n          className=\"ui basic floating dropdown button\"\n          value={status}\n          onChange={handleStatusChange}\n          required\n        >\n          <option value=\"\">Select status</option>\n          <option value=\"ranOut\">Ran out</option>\n          <option value=\"have\">Have</option>\n        </select>\n\n        <div>\n          <button\n            type=\"submit\"\n            className=\"ui primary button\"\n          >\n            Add product\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};","import React from 'react';\nimport { GroceryList } from './components/GroceryList/GroceryList';\nimport { AddGrocery } from './components/AddGrocery/Addgrocery';\nimport { SetLocalStorage } from './localStorage/setLocalStorage';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nexport const App = () => {\n  const [groceryList, setGroceryList] = SetLocalStorage('groceryList', [])\n\n  const addNewGrocery = (name, priority, status) => {\n    const newGrocery = {\n      name,\n      priority,\n      status,\n      id: new Date(),\n    };\n\n    setGroceryList([...groceryList, newGrocery]);\n  };\n\n  const removeProduct = (id) => {\n    setGroceryList(groceryList.filter((item) => item.id !== id));\n  }\n\n  const changeStatus = (status, id) => {\n    setGroceryList(groceryList.map((item) => {\n\n      if (item.id !== id) {\n        return { ...item };\n      }\n      \n        return {\n          ...item,\n          status,\n        };\n    }));\n  }\n\n  return (\n    <div className=\"App\">\n      <AddGrocery addNewGrocery={addNewGrocery} />\n      <GroceryList\n        groceryList={groceryList}\n        removeProduct={removeProduct}\n        changeStatus={changeStatus}\n      />\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\r\n\r\nexport const SetLocalStorage = (key, defaultValue) => {\r\n  const stored = localStorage.getItem(key);\r\n  const initial = stored ? JSON.parse(stored) : defaultValue;\r\n  const [value, setValue] = useState(initial);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n\r\n  return [value, setValue];\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App.jsx';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}